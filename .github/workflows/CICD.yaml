name: Deploy to ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      env:
        ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
        docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

    - name: Create new ECS task definition
      id: task-def
      run: |
        export TASK_DEF=$(cat <<EOF
        {
          "family": "${{ secrets.SERVICE_NAME }}-task-def",
          "networkMode": "awsvpc",
          "executionRoleArn": "${{ secrets.TASK_EXECUTION_ROLE }}",
          "containerDefinitions": [
            {
              "name": "web",
              "image": "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}",
              "portMappings": [
                {
                  "containerPort": 80,
                  "protocol": "tcp"
                }
              ],
              "essential": true
            }
          ],
          "requiresCompatibilities": ["FARGATE"],
          "cpu": "256",
          "memory": "512"
        }
        EOF
        )
        echo "$TASK_DEF" > task-definition.json

    - name: Register task definition
      id: register-task
      run: |
        TASK_DEF_ARN=$(aws ecs register-task-definition \
          --cli-input-json file://task-definition.json \
          --query 'taskDefinition.taskDefinitionArn' --output text)
        echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.CLUSTER_NAME }} \
          --service ${{ secrets.SERVICE_NAME }} \
          --task-definition $TASK_DEF_ARN
